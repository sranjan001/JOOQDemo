<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.satya</groupId>
    <artifactId>JOOQDemo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>JOOQDemo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta-extensions</artifactId>
            <version>3.12.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>


            <!-- The jOOQ code generator plugin -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.12.3</version>

                <executions>
                    <execution>
                        <id>generate-h2-jpa</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.extensions.jpa.JPADatabase</name>
                                    <properties>
                                        <property>
                                            <key>packages</key>
                                            <value>
                                                com.satya.JOOQDemo.entities
                                            </value>
                                        </property>

                                        <!-- Whether JPA 2.1 AttributeConverters should be auto-mapped to jOOQ Converters.
                Custom <forcedType/> configurations will have a higher priority than these auto-mapped converters.
                This defaults to true. -->
                                        <property>
                                            <key>useAttributeConverters</key>
                                            <value>true</value>
                                        </property>

                                        <!-- The default schema for unqualified objects:

                                             - public: all unqualified objects are located in the PUBLIC (upper case) schema
                                             - none: all unqualified objects are located in the default schema (default)

                                             This configuration can be overridden with the schema mapping feature -->
<!--                                        <property>-->
<!--                                            <key>unqualifiedSchema</key>-->
<!--                                            <value>none</value>-->
<!--                                        </property>-->
<!--                                        <property>-->
<!--                                            <key>hibernate.physical_naming_strategy</key>-->
<!--                                            <value>org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy</value>-->
<!--                                        </property>-->
                                    </properties>
                                    <includes>.*</includes>
                                </database>
                                <target>
                                    <packageName>com.satya.JOOQDemo.jooq</packageName>
                                    <directory>src/main/java</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>

                    <!-- This is needed for the JPADatabase -->
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions</artifactId>
                        <version>3.12.3</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.persistence</groupId>
                        <artifactId>javax.persistence-api</artifactId>
                        <version>2.2</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>
