/*
 * This file is generated by jOOQ.
 */
package com.satya.JOOQDemo.jooq.tables.records;


import com.satya.JOOQDemo.jooq.tables.PhoneBook;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhoneBookRecord extends UpdatableRecordImpl<PhoneBookRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 1672368078;

    /**
     * Setter for <code>PHONE_BOOK.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PHONE_BOOK.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PHONE_BOOK.FIRSTNAME</code>.
     */
    public void setFirstname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PHONE_BOOK.FIRSTNAME</code>.
     */
    public String getFirstname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PHONE_BOOK.LASTNAME</code>.
     */
    public void setLastname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PHONE_BOOK.LASTNAME</code>.
     */
    public String getLastname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PHONE_BOOK.PHONENO</code>.
     */
    public void setPhoneno(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PHONE_BOOK.PHONENO</code>.
     */
    public String getPhoneno() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PhoneBook.PHONE_BOOK.ID;
    }

    @Override
    public Field<String> field2() {
        return PhoneBook.PHONE_BOOK.FIRSTNAME;
    }

    @Override
    public Field<String> field3() {
        return PhoneBook.PHONE_BOOK.LASTNAME;
    }

    @Override
    public Field<String> field4() {
        return PhoneBook.PHONE_BOOK.PHONENO;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstname();
    }

    @Override
    public String component3() {
        return getLastname();
    }

    @Override
    public String component4() {
        return getPhoneno();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstname();
    }

    @Override
    public String value3() {
        return getLastname();
    }

    @Override
    public String value4() {
        return getPhoneno();
    }

    @Override
    public PhoneBookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PhoneBookRecord value2(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public PhoneBookRecord value3(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public PhoneBookRecord value4(String value) {
        setPhoneno(value);
        return this;
    }

    @Override
    public PhoneBookRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PhoneBookRecord
     */
    public PhoneBookRecord() {
        super(PhoneBook.PHONE_BOOK);
    }

    /**
     * Create a detached, initialised PhoneBookRecord
     */
    public PhoneBookRecord(Long id, String firstname, String lastname, String phoneno) {
        super(PhoneBook.PHONE_BOOK);

        set(0, id);
        set(1, firstname);
        set(2, lastname);
        set(3, phoneno);
    }
}
